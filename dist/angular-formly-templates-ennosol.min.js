angular.module("formlyEnnosol",["formly","NgSwitchery","tsSelect2"],["formlyConfigProvider",function(e){"use strict";e.setWrapper([{name:"label",templateUrl:"/src/templates/label.html"},{name:"addons",templateUrl:"/src/templates/addons.html"},{name:"fieldset",templateUrl:"/src/templates/fieldset.html"},{name:"validation",templateUrl:"/src/templates/error.html"}]),e.setType([{name:"nested",wrapper:["fieldset"],template:'<formly-form model="model[options.key]" fields="options.data.fields"></formly-form>'},{name:"checkbox",templateUrl:"/src/templates/checkbox.html",wrapper:["validation"]},{name:"switch",templateUrl:"/src/templates/switch.html",wrapper:["label","validation"]},{name:"radio",templateUrl:"/src/templates/radio.html",wrapper:["label","validation"]},{name:"radio-inline",templateUrl:"/src/templates/radio-inline.html",wrapper:["label","validation"]},{name:"input",templateUrl:"/src/templates/input.html",wrapper:["addons","label","validation"]},{name:"date",templateUrl:"/src/templates/date.html",wrapper:["addons","label","validation"]},{name:"daterange",templateUrl:"/src/templates/daterange.html",wrapper:["addons","label","validation"]},{name:"coordinate",templateUrl:"/src/templates/coordinate.html",wrapper:["addons","label","validation"]},{name:"static",templateUrl:"/src/templates/static.html",wrapper:["addons","label"]},{name:"textarea",templateUrl:"/src/templates/textarea.html",wrapper:["addons","label","validation"]},{name:"spinner",templateUrl:"/src/templates/spinner.html",wrapper:["addons","label","validation"]},{name:"search",templateUrl:"/src/templates/search.html",wrapper:["label","validation"]},{name:"tags",templateUrl:"/src/templates/tags.html",wrapper:["label","validation"]},{name:"select",templateUrl:"/src/templates/select.html",wrapper:["label","validation"]},{name:"multiSelect",templateUrl:"/src/templates/multiselect.html",wrapper:["label","validation"]},{name:"repeatSection",templateUrl:"/src/templates/repeat-section.html",wrapper:[],controller:"RepeatSectionController"},{name:"sortableRepeatSection",templateUrl:"/src/templates/sortable-repeat-section.html",wrapper:[],controller:"RepeatSectionController"}])}]).directive("nslTouchspin",["$timeout",function(e){return{restrict:"A",scope:{min:"=",max:"=",step:"=",stepInterval:"=",decimals:"=",boostAt:"=",maxBoostedStep:"=",prefix:"=",postfix:"=",verticalButtons:"="},link:function(t,a,o){"undefined"==typeof t.min&&(t.min=Number.MIN_SAFE_INTEGER||-Number.MAX_VALUE),"undefined"==typeof t.max&&(t.max=Number.MAX_SAFE_INTEGER||Number.MAX_VALUE),("undefined"==typeof t.step||0===t.step)&&(t.step=1),$(a).TouchSpin({min:t.min,max:t.max,step:t.step,stepinterval:t.stepInterval||50,decimals:t.decimals||0,boostat:t.boostAt||5,maxboostedstep:t.maxBoostedStep||10,prefix:t.prefix||"",postfix:t.postfix||"",verticalbuttons:t.verticalButtons||!1}),e(function(){$(a).on("change",function(){a.trigger("input")})},0)}}}]).directive("nslFormlyDatepicker",["$timeout",function(e){return{restrict:"C",link:function(t,a){e(function(){$(a).val($(a).val().substring(0,10)),$(a).datepicker().on("changeDate",function(){a.trigger("input")})},0)}}}]).directive("nslSelectWatcher",["$timeout",function(e){return{restrict:"A",require:"ngModel",link:function(t,a,o,l){e(function(){"multiple"===$(a).attr("multiple")&&$(a).select2().select2("val",l.$modelValue)},0),t.$watch(function(){return l.$modelValue},function(e){void 0===e&&$(a).select2().select2("val",null)})}}}]).controller("RepeatSectionController",["$scope","$timeout",function(e,t){function a(e){return e=angular.copy(e),l(e),e}function o(){e.model[e.options.key]=e.model[e.options.key]||[];var t=e.model[e.options.key],a=(t[t.length-1],{open:!0});t.push(a)}function l(e){i++,angular.forEach(e,function(e,t){return e.fieldGroup?void l(e.fieldGroup):(e.templateOptions&&e.templateOptions.fields&&l(e.templateOptions.fields),void(e.id=e.id||e.key+"_"+t+"_"+i+n(0,9999)))})}function n(e,t){return Math.floor(Math.random()*(t-e))+e}function s(e,t){t=t.replace(/\[(\w+)\]/g,".$1"),t=t.replace(/^\./,"");for(var a=t.split("."),o=0,l=a.length;l>o;++o){var n=a[o];if(!(n in e))return;e=e[n]}return e}var i=1;e.formOptions={formState:e.formState},e.addNew=o,e.copyFields=a,e.getPanelHeader=function(t){var a=[];angular.forEach(e.options.templateOptions.panel.header.captionFields,function(o,l){"undefined"!=typeof s(e.model[e.options.key][t],o)&&a.push(s(e.model[e.options.key][t],o))});try{var o=vsprintf(e.options.templateOptions.panel.header.captionFormat,a)}catch(l){o=""}finally{return o}}}]).service("formlyEnnosolCfg",["$q","$http",function(e,t){this.configuration=function(){var a=this;a.url="",a.method="get",a.delay=250,a.idField="id",a.dataAccessor="",a.termParam="query",a.termAccessor="term",a.pageParam="page",a.pageAccessor="page",a.data=function(e){var t={};return t[a.cfg.termParam]=e[a.cfg.termAccessor],t[a.cfg.pageParam]=e[a.cfg.pageAccessor],t},a.processResults=function(e,t){if(""!==a.cfg.dataAccessor){var o=a.cfg.dataAccessor.split("--");do{var l=o.splice(0,1);angular.isNumber(l)&&(l=1*l),e=e[l]}while(o.length>0)}return"id"!==a.cfg.idField&&e.forEach(function(e,t,o){o[t].id=o[t][a.cfg.idField]}),{results:e}},a.templateResult=function(e){return e.text},a.templateSelection=function(e){return e.text},a.escapeMarkup=function(e){return e},a.getConfig=function(e){return"undefined"==typeof e&&(e={}),a.cfg=angular.merge({},a,e),{ajax:{type:a.cfg.method,method:a.cfg.method,dataType:"json",delay:a.cfg.delay,cache:!0,transport:a.cfg.jTransport,url:a.cfg.url,data:a.cfg.data,params:a.cfg.data,processResults:a.cfg.processResults},templateResult:a.cfg.templateResult,templateSelection:a.cfg.templateSelection,escapeMarkup:a.cfg.escapeMarkup}},a.getConfig({}),a.jTransport=function(e,t,a){var o=$.ajax(e);return o.then(t),o.fail(a),o},a.aTransport=function(a,o,l){var n=e.defer();return a.method=a.type,a.params=a.data,angular.extend({timeout:n},a),t(a).then(function(e){o(e.data)},l),{abort:n.resolve}}}}]),angular.module("formlyEnnosol").run(["$templateCache",function(e){e.put("/src/templates/addons.html",'<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}"><div style="border:0" class="input-group-addon {{to.addonLeft.bgClassName}}" ng-if="to.addonLeft" ng-style="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonLeft.onClick(options, this)"><i class="{{to.addonLeft.className}}" ng-if="to.addonLeft.className"></i> <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span></div><formly-transclude></formly-transclude><div style="border:0" class="input-group-addon {{to.addonRight.bgClassName}}" ng-if="to.addonRight" ng-style="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonRight.onClick(options, this)"><i class="{{to.addonRight.className}}" ng-if="to.addonRight.className"></i> <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span></div></div>'),e.put("/src/templates/checkbox.html",'<div class="checkbox clip-check check-primary"><input type="checkbox" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id}}-chk" ng-model="model[options.key]"> <label for="{{id}}-chk">{{to.label}} {{to.required ? \'*\' : \'\'}}</label></div>'),e.put("/src/templates/coordinate.html",'<div class="input-group"><input class="form-control text-center" id="{{id}}_lat" name="lat" ng-model="model[options.key][\'lat\']" placeholder="{{to.placeholder.lat}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;min-height:34px;border:0;{{to.separator.style}}" ng-click="to.separator.click(id)"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control text-center" id="{{id}}_lng" name="lng" ng-model="model[options.key][\'lng\']" placeholder="{{to.placeholder.lng}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"></div>'),e.put("/src/templates/date.html",'<div class="form-group"><input class="form-control show text-center nslFormlyDatepicker" data-provide="{{to.readOnly || to.disabled ? \'\' : \'datepicker\'}}" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),e.put("/src/templates/daterange.html",'<div class="form-group"><div class="input-daterange input-group" data-provide="datepicker" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"><input class="form-control show nslFormlyDatepicker" name="start" ng-model="model[options.key][\'start\']" placeholder="{{to.placeholder.start}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;min-height:34px;border:0;"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control show nslFormlyDatepicker" name="end" ng-model="model[options.key][\'end\']" placeholder="{{to.placeholder.end}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"></div></div>'),e.put("/src/templates/error.html",'<formly-transclude></formly-transclude><div ng-messages="fc.$error" ng-if="options.validation.errorExistsAndShouldBeVisible" class="error-messages"><div ng-message="{{ ::name }}" ng-repeat="(name, message) in ::options.validation.messages" class="message">{{ message(fc.$viewValue, fc.$modelValue, this)}}</div></div>'),e.put("/src/templates/fieldset.html","<fieldset><legend>{{to.label}} {{to.required ? '*' : ''}}</legend><formly-transclude></formly-transclude></fieldset>"),e.put("/src/templates/input.html",'<div class="form-group"><input class="form-control" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="{{to.password ? \'password\' : (to.type ? to.type : \'text\')}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),e.put("/src/templates/label.html",'<div class="form-group"><label for="{{id}}" class="control-label">{{to.label}} {{to.required ? \'*\' : \'\'}}</label><div><formly-transclude></formly-transclude></div><em id="{{id}}_description" class="help-block" ng-if="options.templateOptions.description" style="opacity:0.6">{{options.templateOptions.description}}</em></div>'),e.put("/src/templates/multiselect.html",'<select ts-select2="to.config" ng-model="model[options.key]" multiple="multiple" ng-options="option.value for option in to.options track by option.key" nsl-select-watcher=""></select>'),e.put("/src/templates/radio-inline.html",'<div class="radio-group"><div ng-repeat="(key, option) in to.options" class="radio-inline"><label><input type="radio" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'id\']" ng-model="model[options.key]">{{option[to.labelProp || \'text\']}}</label></div></div>'),e.put("/src/templates/radio.html",'<div class="radio-group"><div ng-repeat="(key, option) in to.options" class="radio margin-right-20"><label><input type="radio" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'id\']" ng-model="model[options.key]">{{option[to.labelProp || \'text\']}}</label></div></div>'),e.put("/src/templates/repeat-section.html",'<div><fieldset><legend>{{to.label}}</legend><div class="{{hideRepeat}}"><div class="repeatsection" ng-repeat="element in model[options.key]" ng-init="fields = copyFields(to.fields)"><formly-form fields="fields" model="element" form="form"></formly-form><div style="margin-bottom:20px;" class="{{to.removeBtn.className}}"><button type="button" class="btn btn-danger" ng-click="model[options.key].splice($index, 1)"><span class="{{to.removeBtn.spanClassName}}">{{to.removeBtn.text}}</span></button></div></div><p class="AddNewButton"><button type="button" class="btn btn-primary" ng-click="addNew()">{{to.addBtnText}}</button></p></div></fieldset></div>'),e.put("/src/templates/search.html",'<select ts-select2="to.config" ng-model="model[options.key]" data-text-field="to.textField" data-text-fn="to.textFn"></select>'),e.put("/src/templates/select.html",'<select ts-select2="to.config" ng-model="model[options.key]" ng-options="key as value for (key, value) in to.options" nsl-select-watcher=""></select>'),e.put("/src/templates/sortable-repeat-section.html",'<div><fieldset><legend>{{to.label}}</legend><div class="{{hideRepeat}}"><div class="sortable-container" sv-root="" sv-on-sort="" sv-part="model[options.key]"><div class="repeatsection" ng-repeat="element in model[options.key]" sv-element="opts" ng-init="fields = copyFields(to.fields)"><div class="input-group sortable-element"><div class="btn-primary bg-primary input-group-addon" sv-handle="">{{$index + 1}}.</div><div><div class="panel panel-default"><div class="panel-heading clearfix" ng-show="{{to.panel.header.show}}"><h4 class="panel-title pull-left" style="padding-top: 7.5px;"><span ng-show="{{to.panel.header.orderNum}}" ng-bind-html="getPanelHeader($index)"></span></h4><button type="button" ng-click="element.open = !element.open" class="btn btn-link pull-right"><span class="glyphicon icon" ng-class="{\'glyphicon-chevron-up\':element.open,\'glyphicon-chevron-down\':!element.open}"></span></button></div><div class="panel-body" ng-show="element.open || {{!to.panel.header.show}}"><formly-form fields="fields" model="element" form="form"></formly-form><div style="margin-bottom:20px;" class="{{to.removeBtn.className}}"><button type="button" class="btn btn-danger" ng-click="model[options.key].splice($index, 1)"><span class="{{to.removeBtn.spanClassName}}">{{to.removeBtn.text}}</span></button></div></div></div></div></div></div></div><p class="AddNewButton"><button type="button" class="btn btn-primary" ng-click="addNew()">{{to.addBtnText}}</button></p></div></fieldset></div>'),e.put("/src/templates/spinner.html",'<div class="form-group"><input nsl-touchspin="" class="form-control text-center" type="text" ng-model="model[options.key]" data-min="to.data.min" data-max="to.data.max" data-step="to.data.step" data-stepinterval="to.data.stepInterval" data-decimals="to.data.decimals" data-boost-at="to.data.boostAt" data-max-boosted-step="to.data.maxBoostedStep" data-prefix="to.data.prefix" data-postfix="to.data.postfix" data-vertical-buttoms="to.data.verticalButtons"></div>'),e.put("/src/templates/static.html",'<div class="form-group"><p class="form-control-static">{{model[options.key]}}</p></div>'),e.put("/src/templates/switch.html",'<input type="checkbox" class="js-switch" ui-switch="" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id}}-chk" ng-model="model[options.key]">'),e.put("/src/templates/tags.html",'<select ts-select2="to.config" ng-model="model[options.key]" ng-options="option for option in to.options track by option" data-tags="true" multiple="multiple"></select>'),e.put("/src/templates/textarea.html",'<textarea class="form-control" rows="{{options.templateOptions.rows? options.templateOptions.rows: \'5\'}}" placeholder="{{options.templateOptions.placeholder}}" ng-model="model[options.key]"></textarea>')}]);