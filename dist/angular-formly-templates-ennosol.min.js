angular.module("formlyEnnosol",["formly"],["formlyConfigProvider",function(e){"use strict";e.setWrapper([{name:"label",templateUrl:"templates/label.html"}]),e.setType({name:"checkbox",templateUrl:"templates/checkbox.html"}),e.setType({name:"input",templateUrl:"templates/input.html",wrapper:["label"]}),e.setType({name:"radio",templateUrl:"templates/radio.html"}),e.setType({name:"range",templateUrl:"templates/range.html"}),e.setType({name:"textarea",templateUrl:"templates/textarea.html"}),e.setType({name:"toggle",templateUrl:"templates/toggle.html"}),e.setType({name:"select",templateUrl:"templates/select.html"}),e.templateManipulators.preWrapper.push(function(e,t,l){if(t.templateOptions&&angular.isDefined(t.templateOptions.description)&&"radio"!==t.type&&"checkbox"!==t.type){var o=angular.element("<a></a>");o.append(e);var p=angular.element(o[0].querySelectorAll("[ng-model]"));return p?(o.append('<p id="'+l.id+'_description"class="help-block"ng-if="options.templateOptions.description">{{options.templateOptions.description}}</p>'),p.attr("aria-describedby",l.id+"_description"),o.html()):e}return e})}]),angular.module("formlyEnnosol").run(["$templateCache",function(e){e.put("templates/checkbox.html",'<ion-checkbox ng-model="model[options.key]">{{options.templateOptions.label}}</ion-checkbox>'),e.put("templates/input.html",'<input class="form-control" ng-model="model[options.key]" type="{{options.templateOptions.type}}" placeholder="{{options.templateOptions.placeholder}}">'),e.put("templates/label.html",'<div><label for="{{id}}" class="control-label" ng-if="to.label">{{to.label}} {{to.required ? \'*\' : \'\'}}</label><formly-transclude></formly-transclude></div>'),e.put("templates/radio.html",'<ion-radio ng-repeat="item in options.templateOptions.options" icon="{{item.icon? item.icon: \'ion-checkmark\'}}" ng-value="item.value" ng-model="model[options.key]">{{ item.text }}</ion-radio>'),e.put("templates/range.html",'<div class="item range" ng-class="\'range-\' + options.templateOptions.rangeClass"><span>{{options.templateOptions.label}}</span> <i class="icon" ng-if="options.templateOptions.minIcon" ng-class="options.templateOptions.minIcon"></i> <input type="range" min="{{options.templateOptions.min}}" max="{{options.templateOptions.max}}" step="{{options.templateOptions.step}}" value="{{options.templateOptions.value}}" ng-model="model[options.key]"> <i class="icon" ng-if="options.templateOptions.maxIcon" ng-class="options.templateOptions.maxIcon"></i></div>'),e.put("templates/select.html",'<label class="item item-input item-select"><div class="input-label">{{to.label}}</div><select ng-model="model[options.key]" ng-options="option[to.valueProp || \'value\'] as option[to.labelProp || \'name\'] group by option[to.groupProp || \'group\'] for option in to.options"></select></label>'),e.put("templates/textarea.html",'<label class="item item-input"><textarea rows="{{options.templateOptions.rows? options.templateOptions.rows: \'5\'}}" placeholder="{{options.templateOptions.placeholder}}" ng-model="model[options.key]"></textarea></label>'),e.put("templates/toggle.html",'<ion-toggle ng-model="model[options.key]" toggle-class="toggle-{{options.templateOptions.toggleClass}}">{{options.templateOptions.label}}</ion-toggle>')}]);