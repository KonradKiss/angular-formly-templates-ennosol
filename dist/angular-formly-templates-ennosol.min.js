angular.module("formlyEnnosol",["formly","NgSwitchery","tsSelect2"],["formlyConfigProvider",function(t){"use strict";t.setWrapper([{name:"label",templateUrl:"/src/templates/label.html"},{name:"addons",templateUrl:"/src/templates/addons.html"}]),t.setType([{name:"checkbox",templateUrl:"/src/templates/checkbox.html",wrapper:[]},{name:"switch",templateUrl:"/src/templates/switch.html",wrapper:["label"]},{name:"radio",templateUrl:"/src/templates/radio.html",wrapper:["label"]},{name:"radio-inline",templateUrl:"/src/templates/radio-inline.html",wrapper:["label"]},{name:"input",templateUrl:"/src/templates/input.html",wrapper:["addons","label"]},{name:"date",templateUrl:"/src/templates/date.html",wrapper:["addons","label"]},{name:"daterange",templateUrl:"/src/templates/daterange.html",wrapper:["addons","label"]},{name:"coordinate",templateUrl:"/src/templates/coordinate.html",wrapper:["addons","label"]},{name:"static",templateUrl:"/src/templates/static.html",wrapper:["addons","label"]},{name:"textarea",templateUrl:"/src/templates/textarea.html",wrapper:["addons","label"]},{name:"spinner",templateUrl:"/src/templates/spinner.html",wrapper:["addons","label"]},{name:"search",templateUrl:"/src/templates/search.html",wrapper:["label"]},{name:"tags",templateUrl:"/src/templates/tags.html",wrapper:["addons","label"]},{name:"select",templateUrl:"/src/templates/select.html",wrapper:["addons","label"]}])}]).directive("nslTouchspin",function(){return{restrict:"A",scope:{min:"=",max:"=",step:"=",stepInterval:"=",decimals:"=",boostAt:"=",maxBoostedStep:"=",prefix:"=",postfix:"=",verticalButtons:"="},link:function(t,e,a){"undefined"==typeof t.min&&(t.min=Number.MIN_SAFE_INTEGER||-Number.MAX_VALUE),"undefined"==typeof t.max&&(t.max=Number.MAX_SAFE_INTEGER||Number.MAX_VALUE),("undefined"==typeof t.step||0===t.step)&&(t.step=1),$(e).TouchSpin({min:t.min,max:t.max,step:t.step,stepinterval:t.stepInterval||50,decimals:t.decimals||0,boostat:t.boostAt||5,maxboostedstep:t.maxBoostedStep||10,prefix:t.prefix||"",postfix:t.postfix||"",verticalbuttons:t.verticalButtons||!1})}}}).service("formlyEnnosolSearchConfigService",["$q","$http",function(t,e){this.configuration=function(){var a=this;a.url="",a.method="get",a.delay=250,a.idField="id",a.dataAccessor="",a.termParam="query",a.termAccessor="term",a.pageParam="page",a.pageAccessor="page",a.data=function(t){var e={};return e[a.cfg.termParam]=t[a.cfg.termAccessor],e[a.cfg.pageParam]=t[a.cfg.pageAccessor],e},a.processResults=function(t,e){if(""!==a.cfg.dataAccessor){var o=a.cfg.dataAccessor.split(".");do{var l=o.splice(0,1);angular.isNumber(l)&&(l=1*l),t=t[l]}while(o.length>0)}return"id"!==a.cfg.idField&&t.forEach(function(t,e,o){o[e].id=o[e][a.cfg.idField]}),{results:t}},a.templateResult=function(t){return t.text},a.templateSelection=function(t){return t.text},a.escapeMarkup=function(t){return t},a.getConfig=function(t){return"undefined"==typeof t&&(t={}),a.cfg=angular.merge({},a,t),{ajax:{type:a.cfg.method,method:a.cfg.method,dataType:"json",delay:a.cfg.delay,cache:!0,transport:a.cfg.jTransport,url:a.cfg.url,data:a.cfg.data,params:a.cfg.data,processResults:a.cfg.processResults},templateResult:a.cfg.templateResult,templateSelection:a.cfg.templateSelection,escapeMarkup:a.cfg.escapeMarkup}},a.getConfig({}),a.jTransport=function(t,e,a){var o=$.ajax(t);return o.then(e),o.fail(a),o},a.aTransport=function(a,o,l){var s=t.defer();return a.method=a.type,a.params=a.data,angular.extend({timeout:s},a),e(a).then(function(t){o(t.data)},l),{abort:s.resolve}}}}]),angular.module("formlyEnnosol").run(["$templateCache",function(t){t.put("/src/templates/addons.html",'<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}"><div style="border:0" class="input-group-addon {{to.addonLeft.bgClassName}}" ng-if="to.addonLeft" ng-style="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonLeft.onClick(options, this)"><i class="{{to.addonLeft.className}}" ng-if="to.addonLeft.className"></i> <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span></div><formly-transclude></formly-transclude><div style="border:0" class="input-group-addon {{to.addonRight.bgClassName}}" ng-if="to.addonRight" ng-style="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonRight.onClick(options, this)"><i class="{{to.addonRight.className}}" ng-if="to.addonRight.className"></i> <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span></div></div>'),t.put("/src/templates/checkbox.html",'<div class="checkbox clip-check check-primary"><input type="checkbox" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id}}-chk" ng-model="model[options.key]"> <label for="{{id}}-chk">{{to.label}} {{to.required ? \'*\' : \'\'}}</label></div>'),t.put("/src/templates/coordinate.html",'<div class="input-group"><input class="form-control text-center" name="lat" ng-model="model[options.key][\'lat\']" placeholder="{{to.placeholder.lat}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;min-height:34px;border:0;"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control text-center" name="lng" ng-model="model[options.key][\'lng\']" placeholder="{{to.placeholder.lng}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"></div>'),t.put("/src/templates/date.html",'<div class="form-group"><input class="form-control show text-center" data-provide="{{to.readOnly || to.disabled ? \'\' : \'datepicker\'}}" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),t.put("/src/templates/daterange.html",'<div class="form-group"><div class="input-daterange input-group" data-provide="datepicker" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"><input class="form-control show" name="start" ng-model="model[options.key][\'start\']" placeholder="{{to.placeholder.start}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;min-height:34px;border:0;"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control show" name="end" ng-model="model[options.key][\'end\']" placeholder="{{to.placeholder.end}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="text"></div></div>'),t.put("/src/templates/input.html",'<div class="form-group"><input class="form-control" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}" type="{{to.password ? \'password\' : (to.type ? to.type : \'text\')}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),t.put("/src/templates/label.html",'<div class="form-group"><label for="{{id}}" class="control-label">{{to.label}} {{to.required ? \'*\' : \'\'}}</label><div><formly-transclude></formly-transclude></div><em id="{{id}}_description" class="help-block" ng-if="options.templateOptions.description" style="opacity:0.6">{{options.templateOptions.description}}</em></div>'),t.put("/src/templates/radio-inline.html",'<div class="radio-group"><div ng-repeat="(key, option) in to.options" class="radio-inline"><label><input type="radio" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'value\']" ng-model="model[options.key]">{{option[to.labelProp || \'name\']}}</label></div></div>'),t.put("/src/templates/radio.html",'<div class="radio-group"><div ng-repeat="(key, option) in to.options" class="radio margin-right-20"><label><input type="radio" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'value\']" ng-model="model[options.key]">{{option[to.labelProp || \'name\']}}</label></div></div>'),t.put("/src/templates/search.html",'<div class="form-group"><select ts-select2="to.config" ng-model="model[options.key]" data-text-field="to.textField" data-text-fn="to.textFn"></select></div>'),t.put("/src/templates/select.html",'<div class="form-group"><select class="form-control" ng-model="model[options.key]" ng-readonly="{{to.readOnly}}" ng-disabled="{{to.disabled}}"><option ng-repeat="(key, option) in to.options" ng-if="(!to.readOnly && !to.disabled) || option[to.valueProp || \'value\'] === options.defaultValue" ng-value="option[to.valueProp || \'value\']" ng-selected="options.defaultValue==option[to.valueProp || \'value\']">{{option[to.labelProp || \'name\']}}</option></select><span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),t.put("/src/templates/spinner.html",'<div class="form-group"><input nsl-touchspin="" class="form-control text-center" type="text" ng-model="model[options.key]" data-min="to.data.min" data-max="to.data.max" data-step="to.data.step" data-stepinterval="to.data.stepInterval" data-decimals="to.data.decimals" data-boost-at="to.data.boostAt" data-max-boosted-step="to.data.maxBoostedStep" data-prefix="to.data.prefix" data-postfix="to.data.postfix" data-vertical-buttoms="to.data.verticalButtons"></div>'),t.put("/src/templates/static.html",'<div class="form-group"><p class="form-control-static">{{model[options.key]}}</p></div>'),t.put("/src/templates/switch.html",'<input type="checkbox" class="js-switch" ui-switch="" ng-disabled="{{to.readOnly || to.disabled}}" id="{{id}}-chk" ng-model="model[options.key]">'),t.put("/src/templates/tags.html",'<div class="form-group"><select ts-select2="to.config" ng-model="model[options.key]" ng-options="option for option in to.options track by option" data-tags="true" multiple="multiple"></select></div>'),t.put("/src/templates/textarea.html",'<textarea class="form-control" rows="{{options.templateOptions.rows? options.templateOptions.rows: \'5\'}}" placeholder="{{options.templateOptions.placeholder}}" ng-model="model[options.key]"></textarea>')}]);